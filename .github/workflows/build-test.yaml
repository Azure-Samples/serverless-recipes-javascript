name: Build and test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  find_samples:
    runs-on: ubuntu-latest
    outputs:
      samples: ${{ steps.list-samples.outputs.samples }}
    steps:
      - uses: actions/checkout@v4
      - id: list-samples
        run: |
          samples=$(ls samples | jq -R -s -c 'split("\n")[:-1]')
          echo "Found samples: $samples"
          echo "samples=$samples" >> $GITHUB_OUTPUT

  build_test:
    needs: find_samples
    strategy:
      matrix:
        sample: ${{ fromJSON(needs.find_samples.outputs.samples) }}
        node_version: [20]

    name: ${{ matrix.sample }} - Node.js v${{ matrix.node_version }}
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js v${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install dependencies
        run: cd samples/${{ matrix.sample }} && npm install
      - name: Build
        run: cd samples/${{ matrix.sample }} && npm run build
      - name: Lint
        run: cd samples/${{ matrix.sample }} && npm run lint --if-present
      - name: Test
        run: cd samples/${{ matrix.sample }} && npm test --if-present

  build_test_all:
    if: always()
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Check build matrix status
        if: ${{ needs.build_test.result != 'success' }}
        run: exit 1
